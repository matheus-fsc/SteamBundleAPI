#!/usr/bin/env node

/**
 * Teste de Integra√ß√£o Storage API
 * Verifica se a sincroniza√ß√£o entre updateBundles.js e Storage API est√° funcionando
 */

// Carregar vari√°veis de ambiente primeiro
require('dotenv').config();

const { storageSyncManager } = require('./services/storageSync');

async function testStorageIntegration() {
    console.log('üß™ TESTE DE INTEGRA√á√ÉO STORAGE API\n');
    
    try {
        // 1. Validar configura√ß√£o
        console.log('1Ô∏è‚É£ Validando configura√ß√£o...');
        storageSyncManager.validateConfig();
        console.log('‚úÖ Configura√ß√£o v√°lida\n');
        
        // 2. Testar conectividade
        console.log('2Ô∏è‚É£ Testando conectividade...');
        const connectivity = await storageSyncManager.testConnection();
        if (connectivity.success) {
            console.log(`‚úÖ Conectividade OK (status: ${connectivity.status})`);
        } else {
            console.log(`‚ùå Conectividade falhou: ${connectivity.error}`);
            return;
        }
        console.log('');
        
        // 3. Testar sincroniza√ß√£o de fila de falhas vazia
        console.log('3Ô∏è‚É£ Testando sincroniza√ß√£o de fila de falhas...');
        const testQueue = {
            timestamp: new Date().toISOString(),
            totalFailed: 0,
            retryable: 0,
            bundles: []
        };
        
        await storageSyncManager.syncFailedBundlesQueue(testQueue);
        console.log('‚úÖ Fila de falhas vazia sincronizada\n');
        
        // 4. Testar recupera√ß√£o de fila de falhas
        console.log('4Ô∏è‚É£ Testando recupera√ß√£o de fila de falhas...');
        const recoveredQueue = await storageSyncManager.getFailedBundlesQueue();
        if (recoveredQueue.success) {
            console.log(`‚úÖ Fila recuperada: ${recoveredQueue.queue.totalFailed} bundles`);
        } else {
            console.log(`‚ö†Ô∏è Erro na recupera√ß√£o: ${recoveredQueue.error}`);
        }
        console.log('');
        
        // 5. Testar sincroniza√ß√£o de chunk de bundles detalhados (mock)
        console.log('5Ô∏è‚É£ Testando sincroniza√ß√£o de chunk detalhado...');
        const mockDetailedBundles = [
            { bundleid: 'test1', name: 'Test Bundle 1' },
            { bundleid: 'test2', name: 'Test Bundle 2' }
        ];
        
        const chunkInfo = {
            chunkNumber: 1,
            totalChunks: 1,
            chunkSize: 200,
            totalExpected: 2,
            isLastChunk: true
        };
        
        await storageSyncManager.syncDetailedBundlesChunk(mockDetailedBundles, chunkInfo);
        console.log('‚úÖ Chunk de teste sincronizado\n');
        
        console.log('üéâ TODOS OS TESTES PASSARAM!');
        console.log('‚úÖ Sistema de sincroniza√ß√£o Storage API est√° funcional');
        
    } catch (error) {
        console.error('‚ùå ERRO NO TESTE:', error.message);
        console.error('Stack:', error.stack);
        process.exit(1);
    }
}

// Executa o teste
if (require.main === module) {
    testStorageIntegration();
}

module.exports = { testStorageIntegration };
